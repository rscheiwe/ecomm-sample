"""empty message

Revision ID: 9f5f86adbe06
Revises: 
Create Date: 2023-04-14 23:17:49.966490

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9f5f86adbe06'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_roles_role_name'), ['role_name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('main_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('password_plain', sa.String(), nullable=True),
    sa.Column('superadmin', sa.Boolean(), nullable=True),
    sa.Column('shop_name', sa.String(), nullable=True),
    sa.Column('remember_token', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('card_brand', sa.String(), nullable=True),
    sa.Column('card_last_four', sa.Integer(), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('shop_domain', sa.String(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('billing_plan', sa.String(), nullable=True),
    sa.Column('trial_starts_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('main_id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('main_id', sa.Integer(), nullable=True),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('style', sa.String(), nullable=True),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('product_type', sa.String(), nullable=True),
    sa.Column('shipping_price', sa.Integer(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.main_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userroles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('userroles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_userroles_id'), ['id'], unique=False)

    op.create_table('inventories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('main_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('price_cents', sa.Integer(), nullable=True),
    sa.Column('sale_price_cents', sa.Integer(), nullable=True),
    sa.Column('cost_cents', sa.Integer(), nullable=True),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.main_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('main_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('inventory_id', sa.Integer(), nullable=True),
    sa.Column('street_address', sa.String(), nullable=True),
    sa.Column('apartment', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('zip', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('order_status', sa.String(), nullable=True),
    sa.Column('payment_ref', sa.String(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('payment_amt_cents', sa.Integer(), nullable=True),
    sa.Column('ship_charged_cents', sa.Float(), nullable=True),
    sa.Column('ship_cost_cents', sa.Float(), nullable=True),
    sa.Column('subtotal_cents', sa.Integer(), nullable=True),
    sa.Column('total_cents', sa.Integer(), nullable=True),
    sa.Column('shipper_name', sa.String(), nullable=True),
    sa.Column('payment_date', sa.String(), nullable=True),
    sa.Column('shipped_date', sa.String(), nullable=True),
    sa.Column('tracking_number', sa.String(), nullable=True),
    sa.Column('tax_total_cents', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.main_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.main_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('main_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('inventories')
    with op.batch_alter_table('userroles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_userroles_id'))

    op.drop_table('userroles')
    op.drop_table('products')
    op.drop_table('users')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_role_name'))
        batch_op.drop_index(batch_op.f('ix_roles_id'))

    op.drop_table('roles')
    # ### end Alembic commands ###
